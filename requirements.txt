numpy==1.24.0
pandas==1.5.3
matplotlib==3.6.3
seaborn==0.11.2
Pillow==9.5.0  # Pillow is the modern fork of PIL
scikit-learn==1.1.3
tensorflow==2.12.0  # Assuming TensorFlow 2.12.0 for compatibility
keras==2.6.0

    vectorizer = TfidfVectorizer()
    X = vectorizer.fit_transform(keywords)
    
    # Use PCA to reduce to 2 dimensions for visualization
    pca = PCA(n_components=2)
    coords = pca.fit_transform(X.toarray())
    
    # Create scatter plot
    plt.figure(figsize=(12, 8))
    scatter = plt.scatter(coords[:, 0], coords[:, 1], c=cluster_labels, cmap='viridis')
    plt.colorbar(scatter)
    
    # Annotate points with keywords
    for i, keyword in enumerate(keywords):
        plt.annotate(keyword, (coords[i, 0], coords[i, 1]), fontsize=8, alpha=0.7)
    
    plt.title(f"Keyword Clusters for Question: {question}")
    plt.xlabel("PCA Component 1")
    plt.ylabel("PCA Component 2")
    
    # Adjust layout to prevent overlap
    plt.tight_layout()
    
    # Save the plot
    plt.savefig(f"keyword_clusters_{question}.png", dpi=300, bbox_inches='tight')
    plt.close()

    # Print top keywords for each cluster
    unique_clusters = set(cluster_labels)
    for cluster in unique_clusters:
        cluster_keywords = [kw for kw, cl in zip(keywords, cluster_labels) if cl == cluster]
        print(f"Cluster {cluster} top keywords: {', '.join(cluster_keywords[:5])}")
    print("\n")

print("Visualizations saved and top keywords printed for each question.")
